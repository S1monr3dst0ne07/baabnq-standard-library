
use 'libs/tests/common.baabnq';
use 'libs/trig.baabnq';
use 'libs/float.baabnq';


lab Local::TestTrig::Init;
    sub Floats::ModuleInit;

    "ε := 0.01

    put _epsi     = 31011; "ε
    put _epsitau  = 31360; "ετ (τ = 2π)
    put _epsitau2 = 30849; "(ετ)^2

return;



"this test works by simulating a mass attached to a spring.

"=== proof of relation between the mass-spring-system and the trigonometric sine function ===
"a mass-spring system obeys the following equation (https://en.wikipedia.org/wiki/Hooke's_law):
"    F_spring = s_spring * -D, where
"        F_spring is the force exerted by the spring.
"        s_spring is the offset position of the spring from the point of equilibrium.
"        D is a constant determined by the stiffness of the spring.
"substitute newton's second law of motion:
"    m * a_s = s_s * -D
"then divide by the mass:
"    a_s = -s_s * (D/m)
"and let us assume that (D/m) is equal to 1:
"    a_s = -s_s
"notice that a(t) = (d/dt)^2 s(t):
"    s''(t) = -s(t)
"further notice that (d/dt)^2 sin(x) = -sin(x)
"and substitute s for sin:
"    sin''(t) = -sin(t) ■



lab TestTrig::Sin;
    sub Local::TestTrig::Init;
    
    put _pos = _Floats::Zero;
    put _vel = _epsitau;
        
    
    push  0;
    lab Local::TestTrig::Sin::Loop;        
        sub Stack::Dup;
        sub Floats::Value2Fp;
        push _epsi;
        sub Floats::Mul;        
        push 1;
        sub Floats::ShiftGreat;
        sub Trig::Sin;
        
        push _pos ^ _SIGN_MASK;

        sub Floats::Add;
        push 31564; "~0.2 (allowed error)
        sub Floats::Cmp;
        pull __;
        pull _i;
        jump fail ~ __ != 0;
        push _i;
        

        push _pos;
        push _vel;
        sub Floats::Add;
        pull _pos;
        
        push _pos;
        push _epsitau2 | _SIGN_MASK;
        sub Floats::Mul;
        push _vel;
        sub Floats::Add;
        pull _vel;

        pull _i;
        push _i + 1;        
    jump Local::TestTrig::Sin::Loop ~ _i < 101;
    pull __;
    
    
    jump succ;


